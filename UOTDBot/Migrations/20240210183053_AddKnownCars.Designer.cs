// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UOTDBot;

#nullable disable

namespace UOTDBot.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240210183053_AddKnownCars")]
    partial class AddKnownCars
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.1");

            modelBuilder.Entity("UOTDBot.Models.Car", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("DisplayName")
                        .HasColumnType("TEXT");

                    b.Property<int?>("MapFeaturesId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("MapFeaturesId");

                    b.ToTable("Cars");

                    b.HasData(
                        new
                        {
                            Id = "CarSnow",
                            DisplayName = "SnowCar"
                        },
                        new
                        {
                            Id = "CarRally",
                            DisplayName = "RallyCar"
                        },
                        new
                        {
                            Id = "CarDesert",
                            DisplayName = "DesertCar"
                        });
                });

            modelBuilder.Entity("UOTDBot.Models.Map", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AuthorTime")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DownloadUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("FileSize")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("MapId")
                        .HasColumnType("TEXT");

                    b.Property<string>("MapUid")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ThumbnailUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("UploadedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Maps");
                });

            modelBuilder.Entity("UOTDBot.Models.MapFeatures", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DefaultCarId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("MapId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("DefaultCarId");

                    b.HasIndex("MapId")
                        .IsUnique();

                    b.ToTable("MapFeatures");
                });

            modelBuilder.Entity("UOTDBot.Models.ReportChannel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("AutoThread")
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("ChannelId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<ulong>("GuildId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ReportChannels");
                });

            modelBuilder.Entity("UOTDBot.Models.ReportMessage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ChannelId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("CreatedAt")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("DMId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MapId")
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("MessageId")
                        .HasColumnType("INTEGER");

                    b.Property<ulong?>("OriginalChannelId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ChannelId");

                    b.HasIndex("DMId");

                    b.HasIndex("MapId");

                    b.ToTable("ReportMessages");
                });

            modelBuilder.Entity("UOTDBot.Models.ReportUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<ulong>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("ReportUsers");
                });

            modelBuilder.Entity("UOTDBot.Models.Car", b =>
                {
                    b.HasOne("UOTDBot.Models.MapFeatures", null)
                        .WithMany("Gates")
                        .HasForeignKey("MapFeaturesId");
                });

            modelBuilder.Entity("UOTDBot.Models.MapFeatures", b =>
                {
                    b.HasOne("UOTDBot.Models.Car", "DefaultCar")
                        .WithMany()
                        .HasForeignKey("DefaultCarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UOTDBot.Models.Map", "Map")
                        .WithOne("Features")
                        .HasForeignKey("UOTDBot.Models.MapFeatures", "MapId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DefaultCar");

                    b.Navigation("Map");
                });

            modelBuilder.Entity("UOTDBot.Models.ReportMessage", b =>
                {
                    b.HasOne("UOTDBot.Models.ReportChannel", "Channel")
                        .WithMany()
                        .HasForeignKey("ChannelId");

                    b.HasOne("UOTDBot.Models.ReportUser", "DM")
                        .WithMany()
                        .HasForeignKey("DMId");

                    b.HasOne("UOTDBot.Models.Map", "Map")
                        .WithMany()
                        .HasForeignKey("MapId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Channel");

                    b.Navigation("DM");

                    b.Navigation("Map");
                });

            modelBuilder.Entity("UOTDBot.Models.Map", b =>
                {
                    b.Navigation("Features")
                        .IsRequired();
                });

            modelBuilder.Entity("UOTDBot.Models.MapFeatures", b =>
                {
                    b.Navigation("Gates");
                });
#pragma warning restore 612, 618
        }
    }
}
